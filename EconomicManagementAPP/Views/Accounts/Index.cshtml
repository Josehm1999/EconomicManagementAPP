@model IEnumerable<IndexAccountViewModel>
@{
    ViewData["Title"] = "Accounts";

    string FormatBalance(decimal balance)
    {
        return Math.Abs(balance).ToString("N");
    }

    string GetBalanceClass(decimal balance)
    {
        return balance >= 0 ? "active" : "passive";
    }
}

<h1>Accounts</h1>
<h5>Here you can see all of your accounts!</h5>
<a asp-action="Create" class="btn btn-primary mb-3">Create</a>


<div class="container-totals mb-3">
    <div>
        <div>
            <strong>Active</strong>
        </div>
        <div class="active">
            @FormatBalance(Model.Where(x => x.Balance >0).Sum(x => x.Balance))
        </div>
    </div>
    <div>
        <div>
            <strong>Passive</strong>
        </div>
        <div class="passive">
            @FormatBalance(Model.Where(x => x.Balance < 0).Sum(x => x.Balance))
        </div>
    </div>
    <div>
        <div>
            <strong>Total</strong>
        </div>
        <div>
            @FormatBalance(Model.Sum(x => x.Balance))
        </div>
    </div>
</div>

<div class="accordion accordion-acounts">
    @foreach(var accountType in Model)
    {
        <div class="accordion-item">
            <h2 class="accordion-header" id="headerOne">
                @{
                    var id = accountType.AccounType.Replace(" ", "");
                    var dataBSTarget = '#' + id;
                    var accountTypeClass = GetBalanceClass(accountType.Balance);
                }

                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="@dataBSTarget">
                    <span class="me-3">
                        <span><strong>@accountType.AccounType</strong></span>
                        <span class="@accountTypeClass">@FormatBalance(accountType.Balance)</span>
                    </span>
                </button>
            </h2>

                <div id="@id" class="accordion-collapse collapse show">
                    <div>
                        <ul class="list-group">
                            @foreach (var account in accountType.Accounts)
                        {
                            var accountClass = GetBalanceClass(account.Balance);
                            <li class="list-group-item">
                              <span><strong><a asp-action="Detail" asp-route-id="@account.Id" style="color: black;">@account.Name</a></strong>
                                <a asp-action="Modify" asp-route-id="@account.Id" class="btn-primary btn">
                                    <i class="bi-pencil-fill"></i>
                                </a>
                                <a asp-action="Delete" asp-route-id="@account.Id" class="btn-danger btn">
                                    <i class="bi-trash-fill"></i>
                                </a>
                                </span>
                                <span class="@accountClass">@FormatBalance(account.Balance)</span>
                            </li>
                        }
                    </ul>
                    </div>
                </div>
        </div>
    }
</div>

